(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _myModule = require('./modules/myModule');

var Emotion = new _myModule.EmotionClass();

},{"./modules/myModule":2}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EmotionClass = exports.EmotionClass = function () {
	function EmotionClass(text) {
		_classCallCheck(this, EmotionClass);

		$('#clicker').on('click', this.take_snapshot.bind(this));
		$(document).ready(this.ShowCam.bind(this));
		self = this;
	}

	_createClass(EmotionClass, [{
		key: 'take_snapshot',
		value: function take_snapshot() {
			Webcam.snap(function (data_uri) {
				document.getElementById('results').innerHTML = '<img id="base64image" src="' + data_uri + '"/>';
			});
			this.SaveSnap();
		}
	}, {
		key: 'ShowCam',
		value: function ShowCam() {
			Webcam.set({
				width: 320,
				height: 240,
				image_format: 'jpeg',
				jpeg_quality: 100
			});
			Webcam.attach('#my_camera');
		}
	}, {
		key: 'SaveSnap',
		value: function SaveSnap() {
			document.getElementById("loading").innerHTML = "Analyzing, please wait...";
			var file = document.getElementById("base64image").src.substring(23).replace(' ', '+');
			var img = Base64Binary.decodeArrayBuffer(file);
			console.log(img);
			var ajax = new XMLHttpRequest();
			ajax.addEventListener("load", function (event) {
				self.uploadcomplete(event);
			}, false);
			ajax.open("POST", "https://api.projectoxford.ai/emotion/v1.0/recognize", "image/jpg");
			ajax.setRequestHeader("Content-Type", "application/octet-stream");
			//ajax.setRequestHeader("Accept-Encoding","gzip, deflate");
			ajax.setRequestHeader("Accept", "text/html,application/xhtml+xml,application/xml");
			ajax.setRequestHeader("Ocp-Apim-Subscription-Key", " b2faaecf68d1480cb41ca83c4e0bb65c");
			ajax.send(img);
		}
	}, {
		key: 'uploadcomplete',
		value: function uploadcomplete(event) {
			document.getElementById("loading").innerHTML = "Completed";
			var xmlDoc = event.target.responseXML;
			var list = xmlDoc.getElementsByTagName("scores");
			if (list.length >= 1) {
				document.getElementById("anger").innerHTML = list[0].childNodes[0].textContent;
				document.getElementById("contempt").innerHTML = list[0].childNodes[1].textContent;
				document.getElementById("disgust").innerHTML = list[0].childNodes[2].textContent;
				document.getElementById("fear").innerHTML = list[0].childNodes[3].textContent;
				document.getElementById("happiness").innerHTML = list[0].childNodes[4].textContent;
				document.getElementById("neutral").innerHTML = list[0].childNodes[5].textContent;
				document.getElementById("sadness").innerHTML = list[0].childNodes[6].textContent;
				document.getElementById("surprise").innerHTML = list[0].childNodes[7].textContent;
			} else {
				document.getElementById("loading").innerHTML = "Error getting results";
				document.getElementById("anger").innerHTML = "";
				document.getElementById("contempt").innerHTML = "";
				document.getElementById("disgust").innerHTML = "";
				document.getElementById("fear").innerHTML = "";
				document.getElementById("happiness").innerHTML = "";
				document.getElementById("neutral").innerHTML = "";
				document.getElementById("sadness").innerHTML = "";
				document.getElementById("surprise").innerHTML = "";
			}
		}
	}]);

	return EmotionClass;
}();

},{}]},{},[1]);
